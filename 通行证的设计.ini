通行证的设计



商业化上，设计为“重内购，轻广告”，内购与广告比到达9：1，且广告的坑位并不多。 在具体商业化设计上，除了常见的各类基金、周卡月卡、礼包等付费手段之外，游戏还通过“简便性”吸引用户付费，比如双倍砍伐速度、一键升级神通等功能吸引用户破冰，设计思路上既使用小游戏常见的破冰付费特点，也使用重度游戏常见的性价比吸引特点（常用思路）。


好的，我们来为PandaHabit设计通行证（Battle Pass）系统，以及周卡、月卡、年卡的具体内购方案。同时，我们会遵循“重内购，轻广告”（9:1比例）的商业化原则，并融入您提到的“简便性”付费点和性价比吸引策略。

**核心商业化理念：**

*   **价值驱动：** 所有付费点都旨在为用户提供明确的、可感知的价值，无论是效率提升、体验优化还是独特奖励。
*   **轻度打扰：** 广告位少且可选，主要作为非付费用户的补充福利。
*   **多层次选择：** 提供不同价位和周期的付费选项，满足不同用户的需求和付费意愿。
*   **“破冰”与“长线”结合：** 利用小额、高频的“简便性”付费吸引用户首次付费，通过通行证、周/月/年卡培养长期付费习惯。

---

**PandaHabit 通行证、周卡、月卡、年卡及商业化设计**

**一、熊猫修行秘境 - 通行证 (Battle Pass)**

*   **主题与命名：** “熊猫修行秘境”、“四季轮回之旅”、“星辰轨迹图”等，每期通行证（赛季）有独特的主题和视觉风格（如春之萌芽、夏之繁盛、秋之收获、冬之静藏）。
*   **周期：** 通常为4-8周一个赛季。
*   **核心机制：**
    *   **秘境等级 (Pass Level):** 用户通过完成每日/每周的“秘境任务”（专属通行证任务，可与部分日常/周常任务重叠，但有额外通行证经验奖励）来提升秘境等级。
    *   **双轨奖励 (Dual Reward Tracks):**
        *   **基础秘境 (Free Track - 竹简之路):** 所有用户均可解锁，等级提升可获得基础资源、少量熊猫经验、普通外观碎片等。奖励相对稀疏。
        *   **进阶秘境 (Paid Track - 墨宝玉卷/星辰之路):** 需要购买“秘境通行玉令”或“星辰令”解锁。每级奖励远优于基础秘境，包含大量稀有资源、专属熊猫皮肤/饰品、专属家园装饰、特殊互动道具、大量幸运点数、甚至赛季限定的动态头像框/称号。
*   **付费点：**
    *   **秘境通行玉令 (Standard Pass):** [价格A，如￥30-￥68]。解锁进阶秘境奖励。
    *   **星辰秘宝/典藏玉令 (Premium Pass/Bundle):** [价格B，如￥68-￥128]。除了通行玉令的功能外，额外：
        *   立即提升秘境等级X级（如10-20级）。
        *   立即获得一套专属的赛季初级限定外观。
        *   赛季内特定资源获取效率小幅提升（如秘境任务经验+10%）。
    *   **秘境等级购买：** 允许用户直接花费钻石（付费货币）购买秘境等级，特别是赛季末期。价格应设计为不如直接购买典藏玉令划算，鼓励早期投入。
*   **价值主张与吸引力 (结合Checklist 2.0):**
    *   **核心特权可视化：** 进阶秘境的奖励预览中，专属皮肤、装饰等使用华丽的动态展示，与基础奖励形成鲜明对比。
    *   **“解锁”型激励：** 清晰展示“购买玉令即可立即领取已达等级的所有进阶奖励”，对已在免费轨道上积累一定等级的用户吸引力巨大。
    *   **限时稀缺：** 赛季限定奖励，过期不返场（或极难获取），营造紧迫感和收藏价值。
    *   **性价比吸引：** 强调进阶秘境总奖励价值远超购买价格。

**二、熊猫守护契约 - 周卡、月卡、年卡**

*   **定位：** 提供持续性的日常福利和特权，培养用户长期付费习惯，是核心的订阅型产品。与VIP等级体系可并行或部分融合。
*   **周卡 (七日守护)：** [价格C，如￥6-￥12]
    *   **立即获得：** 一定数量的钻石 (如60-120钻石)。
    *   **每日领取：**
        *   少量钻石 (如10-20钻石)。
        *   一份熊猫能量零食 (用于快速恢复熊猫体力或心情)。
        *   每日额外1-2次幸运抽奖机会。
    *   **特权(7天内)：**
        *   广告可选跳过次数+1 (若有广告)。
        *   每日可额外领取一次“简便性”福利，如“一键清扫熊猫家园”（省去手动点击）。
*   **月卡 (月下之约)：** [价格D，如￥25-￥38]
    *   **立即获得：** 较多数量的钻石 (如250-380钻石) + 一份专属月卡头像框（当月有效或永久）。
    *   **每日领取：**
        *   中量钻石 (如20-30钻石)。
        *   一份高级熊猫能量零食。
        *   每日额外2-3次幸运抽奖机会。
        *   少量稀有资源包（如进化材料碎片）。
    *   **特权(30天内)：**
        *   广告完全可选跳过 (若有广告)。
        *   所有“简便性”操作效率提升（如自定义目标规划时，熊猫给出更优建议；“一键完成”部分简单日常任务）。
        *   熊猫心情/体力下降速度减缓10%。
        *   专属聊天气泡（若有社交）。
*   **年卡 (岁岁平安/四季相伴)：** [价格E，如￥198-￥328]
    *   **立即获得：** 大量钻石 (如1980-3280钻石) + 一套**永久专属华丽熊猫皮肤** + **永久专属动态称号**。
    *   **每日领取：**
        *   与月卡每日领取内容一致或略有提升。
        *   **每月额外赠送：** 一张“秘境等级直升券”（可用于通行证）或一份“典藏幸运礼包”。
    *   **特权(365天内)：**
        *   包含所有月卡特权。
        *   **所有资源获取效率提升5-10%（包括任务、通行证、活动等）。**
        *   **熊猫所有成长速度（等级、技能）提升5%。**
        *   VIP商店享有额外专属折扣。
        *   专属客服通道（若有）。
        *   每年生日当天赠送一份生日大礼包。
*   **价值主张与吸引力：**
    *   **核心特权可视化：** 购买界面清晰列出每日可领取的具体物品和数量，以及特权带来的效率提升（如“预计每月可额外获得XXX钻石”）。
    *   **锚点定价与价值打包：** 年卡的价格设计使其单月成本远低于月卡，并赠送高价值永久物品，吸引长期投入。月卡作为性价比适中的选择。周卡作为低门槛体验。
    *   **“一步到位”的长期订阅激励：** 年卡的永久皮肤和称号是核心吸引点。
    *   **营造“拥有感”：** 每日领取的稳定福利让用户感到持续受益。

**三、其他内购项目**

1.  **成长基金 (熊猫助力金/修行基金)：**
    *   **机制：** 用户一次性购买，随着熊猫等级/用户账号等级提升，可分阶段领取大量钻石或稀有资源。总返还价值远超购买价格。
    *   **吸引力：** 高性价比，适合有长期游戏意愿的用户。
2.  **限时礼包 (节日献礼/机缘福袋)：**
    *   **机制：** 在特定节日、活动或用户达成特定里程碑时出现，限时限量购买。内含高价值道具、皮肤、资源等，通常折扣力度较大。
    *   **吸引力：** 稀缺性、高性价比。
3.  **钻石直购 (玉璧充值)：**
    *   **机制：** 不同档位的钻石充值选项，通常有“首充双倍”或“充值额外赠送”活动。
    *   **定位：** 满足用户紧急需求或直接购买高价值物品的途径。
4.  **“简便性”付费点 (破冰点)：** (这些功能可部分包含在周卡/月卡特权中，也可单独小额付费解锁单次或短期)
    *   **双倍砍伐/收集速度 (临时Buff)：** 观看广告或小额钻石购买，在一定时间内（如15-30分钟）采集竹子、水等资源速度翻倍。
    *   **一键升级神通/技能 (单次)：** 当熊猫技能升级材料繁多或操作复杂时，提供消耗少量钻石“一键完美升级”的选项。
    *   **一键完成部分日常任务 (每日限次)：** 消耗少量钻石或特定道具，直接完成几个指定的简单日常任务。
    *   **跳过等待时间 (若有)：** 如熊猫家园建筑升级有等待时间，可消耗钻石加速。
    *   **幸运抽奖“再来一次”：** 抽奖结果不满意时，小额钻石可获得一次重抽机会（每日限次）。
    *   **吸引力：** 解决用户即时痛点，提供便利，降低操作门槛，易于形成首次付费。

**四、广告设计 (轻度，可选)**

*   **定位：** 作为非付费用户获取额外资源的补充手段，或解锁某些“简便性”功能的免费途径。广告的出现应始终是用户主动选择。
*   **广告位示例 (用户主动触发)：**
    *   **每日额外资源：** “观看广告可额外领取50竹子/20水”。（每日限3-5次）
    *   **幸运抽奖额外机会：** “观看广告可额外获得1次福缘抽签机会”。（每日限1-2次）
    *   **临时Buff获取：** “观看广告可获得15分钟双倍采集速度”。（每日限1次）
    *   **跳过部分等待时间：** “观看广告可缩短XX分钟等待时间”。
    *   **任务失败后“获取提示”或“免费复活一次”（若有挑战性PVE内容）。**
*   **广告形式：** 以激励视频广告为主。避免插屏、横幅等干扰性广告。
*   **VIP特权：** 月卡/年卡用户可选择完全跳过广告或大幅减少广告触发点。

**五、商业化界面与引导 (融入华丽风格)**

*   **通行证界面 (秘境画卷)：**
    *   背景为动态的赛季主题画卷（如春日樱花飘落、冬日雪山静谧）。
    *   双轨奖励清晰并列，进阶轨道的奖励图标更大、更华丽，有金色边框和粒子特效。
    *   “购买玉令”按钮设计为华丽的玉佩或令牌，点击有祥云展开动画。
    *   等级提升动画流畅且富有仪式感，如墨迹在画卷上点亮新的等级。
*   **周/月/年卡购买界面 (守护契约台)：**
    *   背景为庄重的祭坛或星空图，营造“缔结契约”的氛围。
    *   卡片式展示周/月/年卡选项，年卡卡片最大最华丽，有龙凤等吉祥图案环绕。
    *   每日领取物品以立体图标形式动态展示，特权用简洁图文配合水墨风格插画说明。
    *   购买按钮为“缔结守护”等有代入感的文字，按钮材质为玉石或镶金。
*   **基金/礼包弹窗 (天降洪福/机缘仙匣)：**
    *   弹窗边框采用华丽的传统纹饰，背景为锦缎或祥云图案。
    *   礼包内容物以3D预览或精美2D图标展示，稀有物品有动态光效。
    *   购买按钮为“立即领取福缘”等，配以元宝、宝箱等吉祥图案。
*   **“简便性”付费提示 (仙人指路/便捷符咒)：**
    *   在用户遇到对应痛点时，以熊猫的口吻或小仙童的形象弹出非强制性提示气泡。
    *   气泡设计为卷轴、竹叶或祥云形状。
    *   “双倍速度”等Buff效果在激活时，用户界面上会有华丽的临时视觉特效（如角色周身环绕金色气流）。
*   **广告观看入口 (甘露祈福/天道酬勤)：**
    *   按钮设计为水滴、祈福袋等与“福利”相关的意象。
    *   观看广告前有清晰的奖励预览。

**六、商业化平衡与用户体验**

*   **核心体验保障：** 非付费用户也能完整体验熊猫养成、核心习惯任务和主线剧情。付费主要加速成长、提供便利、解锁更多个性化内容和尊享视觉。
*   **避免“付费墙”：** 关键游戏进程不应被硬性付费墙完全卡死。
*   **数值合理性：** “简便性”付费的定价应小额高频，通行证和周月年卡的性价比需精心设计，让用户感到物有所值。
*   **透明化：** 所有付费项目的权益、价格、概率（如抽奖）需清晰告知。
*   **长期生态：** 避免短期过度榨取，关注用户LTV和口碑。定期审视付费点对游戏平衡和用户体验的影响。

通过以上设计，PandaHabit可以在保持其“华丽游戏风格”和“支持性核心理念”的同时，构建一个既能吸引用户付费，又能保证健康游戏生态的商业化体系。


好的，我们来为PandaHabit设计可导入数据库的通行证、周卡、月卡、年卡以及相关商业化项目的具体结构。这里我会提供更结构化的数据格式，类似于你可以用来填充数据库表的模式。

**核心前提：**

*   所有ID都应该是唯一的。
*   `item_id` 指向一个单独的物品表（包含物品名称、描述、图标、稀有度、类型[资源/皮肤/道具等]）。
*   价格可以使用整数表示最小货币单位（例如，分或美分）以避免浮点数问题。
*   有效期单位可以是 `days`, `permanent`。
*   所有文本字段（如name, description）都需要支持国际化（i18n_key 指向翻译表）。

---

**PandaHabit 商业化数据结构设计**

**1. 通行证 (Battle Pass) - `battle_passes` 表 & `battle_pass_levels` 表**

**`battle_passes` 表 (定义每个赛季的通行证主体)**

| 字段名 (Column Name)     | 数据类型 (Data Type) | 描述 (Description)                                                                 | 示例 (Example)                                |
| :----------------------- | :------------------- | :--------------------------------------------------------------------------------- | :--------------------------------------------- |
| `pass_id`                | INT (PK, AI)         | 通行证唯一ID                                                                       | 1                                              |
| `season_name_i18n_key`   | VARCHAR(255)         | 赛季名称 (国际化Key)                                                               | `battlepass.season1.name` (春之萌芽)           |
| `season_description_i18n_key` | TEXT                 | 赛季描述 (国际化Key)                                                               | `battlepass.season1.desc`                      |
| `start_date`             | DATETIME             | 赛季开始时间                                                                       | `2025-06-01 00:00:00`                          |
| `end_date`               | DATETIME             | 赛季结束时间                                                                       | `2025-07-28 23:59:59`                          |
| `max_level`              | INT                  | 该赛季通行证最高等级                                                                 | 100                                            |
| `theme_visual_asset_key` | VARCHAR(255)         | 赛季主题视觉资源Key (如背景图、UI皮肤)                                                 | `theme.spring_blossom`                         |
| `standard_pass_product_id` | VARCHAR(255)         | 标准通行证商品ID (关联商品表 `products`)                                               | `prod_bp_s1_standard`                          |
| `premium_pass_product_id`| VARCHAR(255)         | 高级通行证商品ID (关联商品表 `products`)                                               | `prod_bp_s1_premium`                           |
| `level_purchase_diamond_cost` | INT                  | 每级通行证等级购买所需钻石                                                             | 50                                             |
| `is_active`              | BOOLEAN              | 当前是否激活                                                                       | `true`                                         |

**`battle_pass_levels` 表 (定义每个通行证等级的具体奖励)**

| 字段名 (Column Name) | 数据类型 (Data Type) | 描述 (Description)                                   | 示例 (Example)                         |
| :------------------- | :------------------- | :--------------------------------------------------- | :------------------------------------- |
| `level_id`           | INT (PK, AI)         | 等级奖励唯一ID                                         | 1                                      |
| `pass_id`            | INT (FK)             | 关联的通行证ID (`battle_passes.pass_id`)             | 1                                      |
| `level_number`       | INT                  | 等级序号                                               | 1                                      |
| `free_reward_item_id`| INT (FK, nullable)   | 免费轨道奖励物品ID (关联 `items.item_id`)              | 101 (少量竹子)                         |
| `free_reward_quantity`| INT (nullable)       | 免费轨道奖励数量                                         | 50                                     |
| `paid_reward_item_id`| INT (FK, nullable)   | 付费轨道奖励物品ID (关联 `items.item_id`)              | 201 (稀有熊猫饰品碎片)                   |
| `paid_reward_quantity`| INT (nullable)       | 付费轨道奖励数量                                         | 5                                      |
| `required_exp`       | INT                  | 达到此等级所需的通行证经验（相对于上一级，或总经验）   | 100                                    |

**`battle_pass_tasks` 表 (定义通行证专属任务)**

| 字段名 (Column Name)   | 数据类型 (Data Type) | 描述 (Description)                                       | 示例 (Example)                                  |
| :--------------------- | :------------------- | :------------------------------------------------------- | :--------------------------------------------- |
| `bp_task_id`           | INT (PK, AI)         | 通行证任务唯一ID                                           | 1                                               |
| `pass_id`              | INT (FK)             | 关联的通行证ID                                             | 1                                               |
| `task_name_i18n_key`   | VARCHAR(255)         | 任务名称 (国际化Key)                                       | `bptask.s1.complete_daily_3` (完成3个日常任务)    |
| `task_type`            | ENUM('daily', 'weekly', 'seasonal') | 任务类型                                                 | `daily`                                         |
| `target_value`         | INT                  | 任务目标值                                               | 3                                               |
| `exp_reward`           | INT                  | 完成任务奖励的通行证经验                                   | 50                                              |
| `related_game_action_key` | VARCHAR(255)       | 关联的游戏内行为Key (用于后台追踪，如 `action.complete_daily_task`) | `action.complete_daily_task`                  |
| `is_repeatable`        | BOOLEAN              | 是否可重复 (主要针对seasonal类型)                          | `false`                                         |

---

**2. 熊猫守护契约 - 周卡、月卡、年卡 - `subscription_plans` 表 & `subscription_benefits` 表**

**`subscription_plans` 表 (定义不同周期的订阅计划)**

| 字段名 (Column Name)          | 数据类型 (Data Type) | 描述 (Description)                                     | 示例 (Example)                              |
| :---------------------------- | :------------------- | :----------------------------------------------------- | :------------------------------------------- |
| `plan_id`                     | INT (PK, AI)         | 订阅计划唯一ID                                           | 1 (周卡), 2 (月卡), 3 (年卡)                  |
| `plan_name_i18n_key`          | VARCHAR(255)         | 计划名称 (国际化Key)                                     | `sub.weekly.name` (七日守护)                |
| `plan_type`                   | ENUM('weekly', 'monthly', 'annual') | 计划类型                                                 | `weekly`                                     |
| `duration_days`               | INT                  | 订阅有效期 (天)                                          | 7                                            |
| `product_id`                  | VARCHAR(255)         | 关联的商品ID (`products.product_id`)                     | `prod_sub_weekly`                            |
| `immediate_diamond_reward`    | INT                  | 购买立即获得的钻石数量                                   | 60                                           |
| `immediate_item_id`           | INT (FK, nullable)   | 购买立即获得的物品ID (如头像框)                            | 301 (周卡专属头像框 - 7天)                  |
| `daily_diamond_reward`        | INT                  | 每日领取的钻石数量                                       | 10                                           |
| `daily_item_id`               | INT (FK, nullable)   | 每日领取的物品ID (如熊猫零食)                              | 401 (熊猫能量零食)                           |
| `daily_item_quantity`         | INT (nullable)       | 每日领取物品数量                                           | 1                                            |
| `monthly_bonus_item_id`       | INT (FK, nullable)   | (仅年卡) 每月额外奖励物品ID                              | 501 (秘境等级直升券)                         |
| `monthly_bonus_item_quantity` | INT (nullable)       | (仅年卡) 每月额外奖励物品数量                            | 1                                            |
| `description_i18n_key`        | TEXT                 | 计划描述 (国际化Key)                                     | `sub.weekly.desc`                            |
| `icon_asset_key`              | VARCHAR(255)         | 计划图标资源Key                                          | `icon.sub_weekly`                            |
| `sort_order`                  | INT                  | 显示排序                                                 | 1                                            |

**`subscription_benefits` 表 (定义订阅计划提供的具体特权)**

| 字段名 (Column Name)   | 数据类型 (Data Type) | 描述 (Description)                                                                 | 示例 (Example)                                  |
| :--------------------- | :------------------- | :--------------------------------------------------------------------------------- | :--------------------------------------------- |
| `benefit_id`           | INT (PK, AI)         | 特权唯一ID                                                                         | 1                                               |
| `plan_id`              | INT (FK)             | 关联的订阅计划ID (`subscription_plans.plan_id`)                                    | 1 (周卡)                                        |
| `benefit_key`          | VARCHAR(255)         | 特权代码Key (用于程序判断，如 `ads.skip_once_daily`, `efficiency.panda_mood_decay_reduction`) | `ads.skip_once_daily`                           |
| `benefit_value_type`   | ENUM('boolean', 'percentage', 'integer', 'string') | 特权值类型                                                                     | `integer`                                       |
| `benefit_value`        | VARCHAR(255)         | 特权值 (如 `true`, `10` (表示10%), `1` (表示次数))                                   | `1` (表示每日可跳过1次广告)                     |
| `benefit_description_i18n_key` | VARCHAR(255)     | 特权描述 (国际化Key)                                                               | `benefit.desc.ads_skip_once` (每日跳过1次广告) |

---

**3. 其他内购项目 - `products` 表 & `product_items` 表 (通用商品结构)**

**`products` 表 (定义所有可购买的商品，包括通行证、订阅、礼包、钻石等)**

| 字段名 (Column Name)        | 数据类型 (Data Type) | 描述 (Description)                                                             | 示例 (Example)                                |
| :-------------------------- | :------------------- | :----------------------------------------------------------------------------- | :------------------------------------------- |
| `product_id`                | VARCHAR(255) (PK)    | 商品唯一ID (通常与App Store/Google Play的商品ID一致)                             | `prod_bp_s1_standard`                        |
| `product_name_i18n_key`     | VARCHAR(255)         | 商品名称 (国际化Key)                                                           | `product.bp_s1_standard.name` (秘境通行玉令)   |
| `product_type`              | ENUM('battle_pass', 'subscription', 'diamond_pack', 'gift_pack', 'fund', 'convenience') | 商品类型                                                                         | `battle_pass`                                |
| `price_tier`                | VARCHAR(50)          | 价格等级 (App Store/Google Play的价格等级标识)                                 | `tier_5` (对应￥30)                          |
| `currency_code`             | CHAR(3)              | 货币代码 (若价格非等级制，而是直接标价)                                        | `CNY`                                        |
| `price_amount`              | INT                  | 价格 (若价格非等级制，整数表示最小单位)                                        | `3000` (表示30元)                            |
| `display_price_override_i18n_key` | VARCHAR(255)   | (可选) 覆盖应用商店价格的显示文本 (如“特惠￥28”)                                 | `product.bp_s1.price_override`               |
| `icon_asset_key`            | VARCHAR(255)         | 商品图标资源Key                                                                | `icon.prod_bp_s1_standard`                   |
| `description_i18n_key`      | TEXT                 | 商品描述 (国际化Key)                                                           | `product.bp_s1_standard.desc`                |
| `is_limited_time`           | BOOLEAN              | 是否限时商品                                                                   | `false`                                      |
| `available_from_date`       | DATETIME (nullable)  | 限时商品可用开始时间                                                             | `null`                                       |
| `available_to_date`         | DATETIME (nullable)  | 限时商品可用结束时间                                                             | `null`                                       |
| `purchase_limit_per_user`   | INT (nullable)       | 每用户购买上限 (如基金类)                                                        | `1`                                          |
| `related_id`                | INT (nullable)       | 关联ID (如通行证ID，订阅计划ID，基金ID)                                          | 1 (关联 `battle_passes.pass_id`)             |
| `sort_order_in_shop`        | INT                  | 在商店中的显示排序                                                               | 10                                           |
| `vip_level_required`        | INT (default 0)      | 购买此商品所需的最低VIP等级                                                      | 0                                            |

**`product_items` 表 (定义一个商品包含的具体物品和数量，用于礼包、基金返还等)**

| 字段名 (Column Name) | 数据类型 (Data Type) | 描述 (Description)                                       | 示例 (Example)                    |
| :------------------- | :------------------- | :------------------------------------------------------- | :--------------------------------- |
| `product_item_id`    | INT (PK, AI)         | 关系唯一ID                                               | 1                                  |
| `product_id`         | VARCHAR(255) (FK)    | 关联的商品ID (`products.product_id`)                     | `prod_giftpack_newbie` (新手礼包)    |
| `item_id`            | INT (FK)             | 包含的物品ID (`items.item_id`)                           | 1 (钻石)                           |
| `quantity`           | INT                  | 物品数量                                                 | 100                                |
| `display_group`      | VARCHAR(50) nullable | (可选) 用于区分商品内不同阶段的奖励，如基金的“等级10奖励” | `level_10_reward`                  |

---

**4. “简便性”付费点 (Convenience Features) - 可在 `products` 表中定义**

这些通常是单次消耗钻石或小额现金购买的“服务”或“临时Buff”。

*   **示例 `products` 表记录：**
    *   `product_id`: `conv_double_harvest_15min`
    *   `product_name_i18n_key`: `product.conv_double_harvest.name` (双倍采集-15分钟)
    *   `product_type`: `convenience`
    *   `price_tier` / `price_amount`: 小额钻石 (如20钻石) 或小额现金
    *   `description_i18n_key`: `product.conv_double_harvest.desc`
    *   `related_game_action_key`: `buff.double_harvest` (后台用于激活对应Buff)
    *   `buff_duration_seconds`: 900 (15分钟)

---

**5. 物品表 - `items` 表 (所有游戏内可获取/购买的物品定义)**

| 字段名 (Column Name)    | 数据类型 (Data Type) | 描述 (Description)                                 | 示例 (Example)                             |
| :---------------------- | :------------------- | :------------------------------------------------- | :------------------------------------------ |
| `item_id`               | INT (PK, AI)         | 物品唯一ID                                           | 1 (钻石), 101 (竹子), 201 (熊猫春日皮肤)    |
| `item_name_i18n_key`    | VARCHAR(255)         | 物品名称 (国际化Key)                                 | `item.diamond.name`                         |
| `item_description_i18n_key` | TEXT               | 物品描述 (国际化Key)                                 | `item.diamond.desc`                         |
| `item_type`             | ENUM('resource', 'currency', 'consumable', 'cosmetic_skin', 'cosmetic_accessory', 'cosmetic_env', 'material', 'pass_ticket', 'misc') | 物品类型                                           | `currency`                                  |
| `rarity`                | ENUM('common', 'uncommon', 'rare', 'epic', 'legendary', 'unique') | 物品稀有度                                         | `common`                                    |
| `icon_asset_key`        | VARCHAR(255)         | 物品图标资源Key                                      | `icon.item_diamond`                         |
| `stack_limit`           | INT (default 999)    | 可堆叠上限 (1表示不可堆叠)                             | 9999 (竹子), 1 (皮肤)                     |
| `is_tradable`           | BOOLEAN (default false) | 是否可交易 (PandaHabit中可能大部分为false)           | `false`                                     |
| `use_effect_key`        | VARCHAR(255) nullable | (可选) 使用该物品触发的效果Key (如熊猫零食恢复体力)    | `effect.restore_panda_energy_small`       |
| `cosmetic_slot`         | ENUM('panda_skin', 'panda_hat', 'panda_glasses', 'env_theme', 'avatar_frame', 'chat_bubble') nullable | (若为装扮类) 适用的装扮槽位                  | `panda_skin`                                |

---

**6. 广告位配置 - `ad_placements` 表**

| 字段名 (Column Name)   | 数据类型 (Data Type) | 描述 (Description)                                                     | 示例 (Example)                                |
| :--------------------- | :------------------- | :--------------------------------------------------------------------- | :------------------------------------------- |
| `placement_id`         | VARCHAR(255) (PK)    | 广告位唯一标识 (程序中调用)                                              | `reward_extra_bamboo`                        |
| `placement_name_i18n_key` | VARCHAR(255)       | 广告位名称 (后台显示用，国际化Key)                                       | `ad.placement.extra_bamboo.name` (额外竹子奖励) |
| `ad_type`              | ENUM('rewarded_video', 'interstitial') | 广告类型 (PandaHabit主要用rewarded_video)                    | `rewarded_video`                             |
| `reward_item_id`       | INT (FK, nullable)   | 观看广告奖励的物品ID                                                     | 101 (竹子)                                   |
| `reward_quantity`      | INT (nullable)       | 奖励物品数量                                                             | 50                                           |
| `daily_watch_limit_per_user` | INT (nullable) | 每用户每日观看上限                                                       | 3                                            |
| `cooldown_seconds_after_watch` | INT (nullable) | 观看后冷却时间 (秒)                                                      | 3600 (1小时)                                 |
| `is_active`            | BOOLEAN              | 当前广告位是否启用                                                       | `true`                                       |
| `vip_skip_behavior`    | ENUM('no_skip', 'skip_for_vip_level_X', 'free_claim_for_vip_level_X') | VIP用户对此广告位的行为 | `skip_for_vip_level_1` (VIP1可跳过)        |

---

**重要说明:**

*   **国际化 (i18n):** 所有面向用户的文本都使用 `_i18n_key` 后缀，指向一个单独的翻译表/文件，方便多语言支持。
*   **资源Key (asset_key):** 所有图标、图片等视觉资源都使用 `_asset_key` 后缀，指向一个资源管理系统或文件路径约定。
*   **外键 (FK):** 清晰标明了表之间的关联。
*   **可空性 (nullable):** 指示了哪些字段可以为空。
*   **枚举 (ENUM):** 限制了某些字段的取值范围，保证数据一致性。
*   **用户数据表：** 上述设计主要集中在配置数据。实际运行还需要用户相关的表，如 `user_battle_pass_progress`, `user_subscriptions`, `user_inventory`, `user_purchases`, `user_ad_watch_log` 等来记录用户的具体状态和行为。

这份结构化的数据设计应该能为您提供一个坚实的基础，用于构建PandaHabit的商业化数据库。在实际开发中，您可能还需要根据具体的技术栈和需求进行微调。


好的，现在我们来为PandaHabit的通行证、周卡/月卡/年卡以及部分商业化项目填充一些具体的配置数据示例。这些数据可以直接或经过简单转换后导入到您之前设计的数据库表中。

**前提：**

*   假设我们已经有了一个 `items` 表，并且已经定义了一些基础物品ID，例如：
    *   `1`: 钻石 (Currency)
    *   `101`: 竹子 (Resource)
    *   `102`: 水 (Resource)
    *   `103`: 熊猫经验 (Resource - 用于熊猫升级)
    *   `201`: 普通熊猫饰品A (Cosmetic_Accessory, Common)
    *   `202`: 稀有熊猫皮肤B (Cosmetic_Skin, Rare)
    *   `203`: 史诗熊猫家园装饰C (Cosmetic_Env, Epic)
    *   `301`: 月卡专属头像框 (Cosmetic_AvatarFrame, Unique_Monthly)
    *   `302`: 年卡专属永久皮肤D (Cosmetic_Skin, Legendary_Annual)
    *   `303`: 年卡专属动态称号 (Cosmetic_Title, Legendary_Annual)
    *   `401`: 熊猫能量零食 (Consumable, effect.restore_panda_energy_small)
    *   `402`: 高级熊猫能量零食 (Consumable, effect.restore_panda_energy_medium)
    *   `501`: 秘境等级直升券 (Consumable, effect.bp_level_up_1)
    *   `601`: 幸运点数 (Resource - 用于幸运抽奖)
*   国际化Key (`_i18n_key`) 使用占位符，实际应对应翻译表。
*   商品ID (`product_id`) 假设遵循 `prod_` 前缀。

---

**PandaHabit 配置数据示例**

**1. 通行证 (Battle Pass) - `battle_passes` & `battle_pass_levels` & `battle_pass_tasks`**

**`battle_passes` 表数据示例 (赛季1: 春之萌芽)**

| pass_id | season_name_i18n_key   | season_description_i18n_key | start_date          | end_date            | max_level | theme_visual_asset_key | standard_pass_product_id | premium_pass_product_id | level_purchase_diamond_cost | is_active |
| :------ | :--------------------- | :-------------------------- | :------------------ | :------------------ | :-------- | :--------------------- | :----------------------- | :---------------------- | :-------------------------- | :-------- |
| 1       | `bp.s1.name` (春之萌芽)  | `bp.s1.desc`                | `2025-06-01 00:00:00` | `2025-07-28 23:59:59` | 80        | `theme.spring_blossom` | `prod_bp_s1_std`         | `prod_bp_s1_prm`        | 50                          | `true`    |

**`battle_pass_levels` 表数据示例 (赛季1, 部分等级)**

| level_id | pass_id | level_number | free_reward_item_id | free_reward_quantity | paid_reward_item_id | paid_reward_quantity | required_exp |
| :------- | :------ | :----------- | :------------------ | :------------------- | :------------------ | :------------------- | :----------- |
| 1        | 1       | 1            | 101 (竹子)          | 100                  | 601 (幸运点数)      | 50                   | 100          |
| 2        | 1       | 2            | 1 (钻石)            | 5                    | 101 (竹子)          | 200                  | 100          |
| 3        | 1       | 3            | 102 (水)            | 50                   | 401 (熊猫能量零食)  | 2                    | 100          |
| ...      | ...     | ...          | ...                 | ...                  | ...                 | ...                  | ...          |
| 10       | 1       | 10           | 601 (幸运点数)      | 30                   | 201 (普通熊猫饰品A) | 1                    | 150          |
| ...      | ...     | ...          | ...                 | ...                  | ...                 | ...                  | ...          |
| 50       | 1       | 50           | 1 (钻石)            | 50                   | 202 (稀有熊猫皮肤B) | 1                    | 200          |
| ...      | ...     | ...          | ...                 | ...                  | ...                 | ...                  | ...          |
| 80       | 1       | 80           | 601 (幸运点数)      | 100                  | 203 (史诗熊猫家园装饰C) | 1                    | 250          |

**`battle_pass_tasks` 表数据示例 (赛季1, 部分任务)**

| bp_task_id | pass_id | task_name_i18n_key      | task_type | target_value | exp_reward | related_game_action_key    | is_repeatable |
| :--------- | :------ | :---------------------- | :-------- | :----------- | :--------- | :------------------------- | :------------ |
| 1          | 1       | `bptask.s1.daily_login` (每日登录) | `daily`   | 1            | 30         | `action.login`               | `false`       |
| 2          | 1       | `bptask.s1.feed_panda_3` (喂养熊猫3次) | `daily`   | 3            | 40         | `action.feed_panda`          | `false`       |
| 3          | 1       | `bptask.s1.complete_main_tasks_5_weekly` (本周完成5个主线任务) | `weekly`  | 5            | 150        | `action.complete_main_task`  | `false`       |
| 4          | 1       | `bptask.s1.collect_bamboo_1000_seasonal` (本赛季收集1000竹子) | `seasonal`| 1000         | 500        | `action.collect_resource_101`| `false`       |

---

**2. 熊猫守护契约 - `subscription_plans` & `subscription_benefits`**

**`subscription_plans` 表数据示例**

| plan_id | plan_name_i18n_key   | plan_type | duration_days | product_id        | immediate_diamond_reward | immediate_item_id | daily_diamond_reward | daily_item_id           | daily_item_quantity | monthly_bonus_item_id | monthly_bonus_item_quantity | description_i18n_key | icon_asset_key  | sort_order |
| :------ | :------------------- | :-------- | :------------ | :---------------- | :----------------------- | :---------------- | :------------------- | :---------------------- | :------------------ | :-------------------- | :-------------------------- | :------------------- | :-------------- | :--------- |
| 1       | `sub.weekly.name` (七日守护) | `weekly`  | 7             | `prod_sub_weekly` | 60                       | NULL              | 10                   | 401 (熊猫能量零食)      | 1                   | NULL                  | NULL                        | `sub.weekly.desc`    | `icon.sub_weekly` | 1          |
| 2       | `sub.monthly.name` (月下之约) | `monthly` | 30            | `prod_sub_monthly`| 300                      | 301 (月卡头像框)  | 25                   | 402 (高级熊猫能量零食)  | 1                   | NULL                  | NULL                        | `sub.monthly.desc`   | `icon.sub_monthly`| 2          |
| 3       | `sub.annual.name` (岁岁平安) | `annual`  | 365           | `prod_sub_annual` | 3280                     | 302 (年卡永久皮肤D) | 25                   | 402 (高级熊猫能量零食)  | 1                   | 501 (秘境等级直升券) | 1                           | `sub.annual.desc`    | `icon.sub_annual` | 3          |

**`subscription_benefits` 表数据示例 (部分)**

| benefit_id | plan_id | benefit_key                           | benefit_value_type | benefit_value | benefit_description_i18n_key     |
| :--------- | :------ | :------------------------------------ | :----------------- | :------------ | :------------------------------- |
| 1          | 1 (周卡) | `ads.skip_optional_count_daily`       | `integer`          | `1`           | `benefit.desc.ads_skip_1_daily`    |
| 2          | 1 (周卡) | `convenience.panda_home_quick_clean`  | `boolean`          | `true`        | `benefit.desc.quick_clean`       |
| 3          | 2 (月卡) | `ads.skip_all_optional`               | `boolean`          | `true`        | `benefit.desc.ads_skip_all`      |
| 4          | 2 (月卡) | `efficiency.panda_mood_decay_reduction`| `percentage`       | `10`          | `benefit.desc.mood_decay_10`     |
| 5          | 2 (月卡) | `social.exclusive_chat_bubble`        | `string`           | `bubble_moon` | `benefit.desc.chat_bubble_moon`  |
| 6          | 3 (年卡) | `efficiency.all_resource_gain_boost`  | `percentage`       | `5`           | `benefit.desc.resource_boost_5`  |
| 7          | 3 (年卡) | `efficiency.panda_growth_speed_boost` | `percentage`       | `5`           | `benefit.desc.growth_boost_5`    |
| 8          | 3 (年卡) | `shop.vip_discount`                   | `percentage`       | `10`          | `benefit.desc.shop_discount_10`  |
| 9          | 3 (年卡) | `social.permanent_title`              | `string`           | `title_annual_guardian` | `benefit.desc.title_annual`      |
| 10         | 2 (月卡) | `lucky_draw.daily_free_chance`        | `integer`          | `2`           | `benefit.desc.lucky_draw_free_2` |
| 11         | 1 (周卡) | `lucky_draw.daily_free_chance`        | `integer`          | `1`           | `benefit.desc.lucky_draw_free_1` |
| 12         | 3 (年卡) | `lucky_draw.daily_free_chance`        | `integer`          | `3`           | `benefit.desc.lucky_draw_free_3` |

---

**3. 其他内购项目 - `products` & `product_items`**

**`products` 表数据示例 (部分)**

| product_id             | product_name_i18n_key       | product_type     | price_tier | currency_code | price_amount | display_price_override_i18n_key | icon_asset_key         | description_i18n_key        | is_limited_time | available_from_date | available_to_date | purchase_limit_per_user | related_id | sort_order_in_shop | vip_level_required |
| :--------------------- | :-------------------------- | :--------------- | :--------- | :------------ | :----------- | :------------------------------ | :--------------------- | :-------------------------- | :-------------- | :------------------ | :---------------- | :---------------------- | :--------- | :----------------- | :----------------- |
| `prod_bp_s1_std`       | `prod.bp_s1_std.name` (秘境玉令S1) | `battle_pass`    | `tier_5`   | CNY           | 3000         | NULL                            | `icon.prod_bp_s1_std`  | `prod.bp_s1_std.desc`       | `false`         | NULL                | NULL              | 1                       | 1 (pass_id) | 5                  | 0                  |
| `prod_bp_s1_prm`       | `prod.bp_s1_prm.name` (星辰秘宝S1) | `battle_pass`    | `tier_10`  | CNY           | 6800         | NULL                            | `icon.prod_bp_s1_prm`  | `prod.bp_s1_prm.desc`       | `false`         | NULL                | NULL              | 1                       | 1 (pass_id) | 6                  | 0                  |
| `prod_sub_weekly`      | `prod.sub_weekly.name` (七日守护) | `subscription`   | `tier_1`   | CNY           | 600          | NULL                            | `icon.prod_sub_weekly` | `prod.sub_weekly.desc`      | `false`         | NULL                | NULL              | NULL                    | 1 (plan_id) | 1                  | 0                  |
| `prod_sub_monthly`     | `prod.sub_monthly.name` (月下之约) | `subscription`   | `tier_4`   | CNY           | 2500         | NULL                            | `icon.prod_sub_monthly`| `prod.sub_monthly.desc`     | `false`         | NULL                | NULL              | NULL                    | 2 (plan_id) | 2                  | 0                  |
| `prod_sub_annual`      | `prod.sub_annual.name` (岁岁平安) | `subscription`   | `tier_30`  | CNY           | 19800        | NULL                            | `icon.prod_sub_annual` | `prod.sub_annual.desc`      | `false`         | NULL                | NULL              | NULL                    | 3 (plan_id) | 3                  | 0                  |
| `prod_diamond_s`       | `prod.diamond_s.name` (小堆钻石)  | `diamond_pack`   | `tier_1`   | CNY           | 600          | `prod.diamond_s.price_first` (首充双倍) | `icon.prod_diamond_s`  | `prod.diamond_s.desc`       | `false`         | NULL                | NULL              | NULL                    | NULL       | 20                 | 0                  |
| `prod_fund_growth`     | `prod.fund_growth.name` (成长基金) | `fund`           | `tier_15`  | CNY           | 9800         | NULL                            | `icon.prod_fund_growth`| `prod.fund_growth.desc`     | `false`         | NULL                | NULL              | 1                       | 101 (fund_id) | 10                 | 0                  |
| `prod_gift_newbie`     | `prod.gift_newbie.name` (新手礼包) | `gift_pack`      | `tier_1`   | CNY           | 600          | NULL                            | `icon.prod_gift_newbie`| `prod.gift_newbie.desc`     | `true`          | `2025-06-01 00:00:00` | `2025-06-07 23:59:59` (针对新用户7天内) | 1 | 15                 | 0                  |
| `prod_conv_fast_harvest` | `prod.conv_fast_harvest.name` (加速采集) | `convenience`  | `diamond_cost` | NULL          | 20 (钻石)    | NULL                            | `icon.prod_conv_fast_harvest` | `prod.conv_fast_harvest.desc` | `false`     | NULL                | NULL              | NULL                    | NULL       | NULL               | 0                  |

**`product_items` 表数据示例 (新手礼包 & 成长基金部分返还)**

| product_item_id | product_id         | item_id        | quantity | display_group     |
| :-------------- | :----------------- | :------------- | :------- | :---------------- |
| 1               | `prod_gift_newbie` | 1 (钻石)       | 50       | NULL              |
| 2               | `prod_gift_newbie` | 101 (竹子)     | 200      | NULL              |
| 3               | `prod_gift_newbie` | 401 (熊猫能量零食) | 3        | NULL              |
| 4               | `prod_fund_growth` | 1 (钻石)       | 500      | `level_5_reward`  |
| 5               | `prod_fund_growth` | 1 (钻石)       | 1000     | `level_10_reward` |
| ...             | ...                | ...            | ...      | ...               |

---

**4. “简便性”付费点 (Convenience Features) - 在 `products` 表中定义**

*(已在上面 `products` 表示例中包含 `prod_conv_fast_harvest`)*

---

**5. 物品表 - `items` 表**

*(假设已按前提中示例定义，此处不再重复)*

---

**6. 广告位配置 - `ad_placements` 表数据示例**

| placement_id          | placement_name_i18n_key    | ad_type          | reward_item_id | reward_quantity | daily_watch_limit_per_user | cooldown_seconds_after_watch | is_active | vip_skip_behavior            |
| :-------------------- | :------------------------- | :--------------- | :------------- | :-------------- | :------------------------- | :--------------------------- | :-------- | :--------------------------- |
| `reward_extra_bamboo` | `ad.placement.extra_bamboo.name` | `rewarded_video` | 101 (竹子)     | 50              | 3                          | 3600                         | `true`    | `skip_for_vip_level_1`       |
| `reward_lucky_draw_chance` | `ad.placement.lucky_draw.name` | `rewarded_video` | NULL           | 1 (表示1次机会) | 2                          | 1800                         | `true`    | `free_claim_for_vip_level_2` |
| `buff_fast_harvest`   | `ad.placement.fast_harvest.name` | `rewarded_video` | NULL           | 900 (表示buff时长秒) | 1                          | 86400 (24小时)               | `true`    | `no_skip`                    |

---

这些数据示例为您提供了一个起点。您需要根据PandaHabit的具体数值策划、平衡性测试以及目标用户群的付费习惯来调整这些值。确保所有国际化Key都有对应的翻译，所有资源Key都有对应的美术资源。




将通行证（Battle Pass）体系与主流的订阅和身份验证服务（如Firebase Auth或类似的OAuth 2.0提供商，这里统称为`BetterAuth`）进行整合，并在此基础上进行拓展，需要考虑几个关键方面：用户身份管理、订阅状态同步、付费凭证验证以及通行证进度与特权的关联。

以下是如何设计和拓展实现这一体系的思路：

**一、核心架构与组件**

1.  **用户身份验证 (User Authentication - `BetterAuth`)**:
    *   **功能：** 用户注册、登录（邮箱/密码、社交登录如Google/Apple/Facebook）、密码重置、用户会话管理。
    *   **产出：** 为每个成功登录的用户生成一个唯一的 `user_id` (通常是`BetterAuth`提供的UID) 和一个用于API请求身份验证的 `auth_token` (如JWT)。
    *   **PandaHabit后端交互：** PandaHabit后端需要能够验证 `auth_token` 的有效性，并从中解析出 `user_id`。

2.  **订阅管理 (Subscription Management - App Store Connect / Google Play Billing + PandaHabit Backend)**:
    *   **功能：** 处理应用内购买（周卡、月卡、年卡、通行证购买）、订阅状态的生命周期管理（激活、续订、过期、取消、宽限期）。
    *   **PandaHabit后端交互：**
        *   接收来自App Store/Google Play的购买凭证。
        *   验证凭证的有效性（通常通过调用平台提供的API或使用服务器端SDK）。
        *   解析凭证，获取订阅的`product_id`、有效期、交易ID等信息。
        *   在PandaHabit的用户数据库中记录用户的有效订阅状态和有效期。
        *   处理服务器到服务器的通知 (Server-to-Server Notifications)，以便实时更新订阅状态（如自动续订成功、用户在平台取消订阅等）。

3.  **PandaHabit后端 (PandaHabit Backend)**:
    *   **核心业务逻辑：** 任务管理、熊猫成长、资源管理、通行证逻辑、奖励发放等。
    *   **数据库：** 存储用户数据、游戏配置数据（如我们之前设计的表）、通行证进度、订阅状态等。
    *   **API接口：** 为客户端提供数据交互接口。

4.  **PandaHabit客户端 (Mobile App)**:
    *   **UI/UX：** 展示通行证界面、订阅购买界面、任务列表等。
    *   **交互逻辑：** 处理用户操作，与后端API通信。
    *   **本地缓存：** 缓存部分用户数据和配置，提升体验。

**二、通行证体系与订阅/Auth的整合流程**

**1. 用户注册/登录流程 (Auth Integration):**

*   客户端使用 `BetterAuth` SDK 进行注册或登录。
*   成功后，`BetterAuth` 返回 `user_id` 和 `auth_token` 给客户端。
*   客户端在后续与PandaHabit后端的API请求中，都携带此 `auth_token`。
*   PandaHabit后端接收请求时，首先验证 `auth_token`：
    *   如果验证通过，解析出 `user_id`，并在数据库中查找或创建该用户记录。
    *   如果验证失败，返回错误。

**2. 购买通行证/订阅流程 (Subscription Integration):**

*   **客户端发起购买：**
    *   用户在PandaHabit客户端选择购买某个通行证（如“秘境通行玉令”）或订阅计划（如“月卡”）。这些商品在我们的 `products` 表中定义，并关联了App Store/Google Play的 `product_id`。
    *   客户端调用App Store/Google Play的购买SDK，传入相应的 `product_id`。
*   **平台处理支付：**
    *   App Store/Google Play处理支付流程。
*   **购买成功，获取凭证：**
    *   支付成功后，平台返回购买凭证 (receipt/purchase token) 给客户端。
*   **客户端发送凭证至PandaHabit后端：**
    *   客户端将购买凭证和用户的 `auth_token` 一同发送给PandaHabit后端的一个特定API端点（例如 `/purchase/validate`）。
*   **PandaHabit后端验证凭证并更新用户状态：**
    *   后端首先验证 `auth_token`，获取 `user_id`。
    *   后端使用服务器端SDK或直接调用App Store/Google Play的API，验证购买凭证的真实性和有效性。
    *   **凭证验证成功后：**
        *   解析凭证，获取购买的商品ID、交易ID、有效期（对于订阅）等。
        *   **更新用户数据库：**
            *   **对于通行证购买：** 在用户的通行证状态表 (如 `user_battle_pass_ownership`) 中标记用户已购买该赛季的付费通行证。
                ```sql
                -- user_battle_pass_ownership 表示例
                -- user_id | pass_id | purchase_date | transaction_id | pass_type ('standard', 'premium')
                -- 123     | 1       | 2025-06-01    | 'GPA.XXXX'     | 'standard'
                ```
            *   **对于订阅购买（周/月/年卡）：** 在用户的订阅状态表 (如 `user_subscriptions`) 中记录订阅的类型、开始时间、到期时间。
                ```sql
                -- user_subscriptions 表示例
                -- user_id | plan_id | start_date          | expiry_date         | transaction_id | status ('active', 'expired', 'cancelled')
                -- 123     | 2 (月卡)| 2025-06-01 10:00:00 | 2025-07-01 10:00:00 | 'GPA.YYYY'     | 'active'
                ```
        *   **解锁权益：** 根据购买的商品类型，立即为用户解锁相应的权益（例如，通行证的进阶轨道、订阅的即时钻石奖励和特权）。
        *   向客户端返回成功响应。
*   **客户端UI更新：**
    *   客户端收到成功响应后，更新UI以反映新的购买状态（如通行证轨道解锁、VIP标识显示）。

**3. 通行证进度与奖励 (Business Logic Integration):**

*   **用户完成通行证任务 (`battle_pass_tasks`)：**
    *   客户端记录任务完成，并通知后端。
    *   后端验证任务完成的有效性，并为用户增加通行证经验 (`user_battle_pass_progress.current_exp`)。
*   **通行证等级提升：**
    *   当用户经验达到升级所需 (`battle_pass_levels.required_exp`)，后端自动提升用户的通行证等级 (`user_battle_pass_progress.current_level`)。
*   **奖励领取：**
    *   客户端展示通行证界面，用户可以看到已达等级对应的奖励。
    *   用户点击“领取”某个等级的奖励。
    *   客户端向后端发送领取请求，包含 `user_id`、`pass_id`、`level_number`。
    *   后端验证用户是否达到该等级，以及该等级的奖励是否已被领取。
    *   **验证通过后：**
        *   从 `battle_pass_levels` 表中查询该等级的奖励。
        *   **判断用户是否购买付费通行证：** 检查 `user_battle_pass_ownership` 表。
        *   **发放奖励：**
            *   如果奖励是免费轨道的 (`free_reward_item_id`)，直接发放。
            *   如果奖励是付费轨道的 (`paid_reward_item_id`)，并且用户已购买付费通行证，则发放。
        *   在用户物品栏 (`user_inventory`) 中增加相应物品。
        *   标记该等级奖励已领取 (`user_battle_pass_progress.claimed_levels` 或类似字段)。
        *   向客户端返回成功和发放的物品信息。
*   **客户端UI更新：** 奖励领取按钮置灰，物品栏更新。

**4. 订阅特权应用 (Subscription Benefits Integration):**

*   **API请求时检查：** 当用户执行需要订阅特权的操作时（如领取每日月卡钻石、使用VIP加速功能、跳过广告），后端API在处理请求前，会：
    *   验证 `auth_token` 获取 `user_id`。
    *   查询 `user_subscriptions` 表，检查用户是否有有效的、包含该特权的订阅计划 (`subscription_plans` -> `subscription_benefits`)。
    *   根据检查结果决定是否允许操作或应用特权效果（如双倍奖励、加速）。
*   **客户端UI展示：**
    *   客户端在启动或关键节点从后端获取用户的当前有效订阅和特权信息。
    *   根据这些信息动态调整UI（如显示VIP标识、解锁特定功能按钮、隐藏广告入口）。

**三、拓展与优化**

1.  **服务器到服务器的通知 (Server-to-Server Notifications - S2S):**
    *   **极其重要！** 订阅状态会因用户在平台（App Store/Google Play）的操作而改变（如取消订阅、续订失败后进入宽限期、恢复购买等）。
    *   配置App Store/Google Play的S2S通知，将这些状态变更实时推送到PandaHabit后端的一个专用端点。
    *   后端接收到通知后，解析通知内容，更新 `user_subscriptions` 表中对应用户的订阅状态和有效期。
    *   这确保了用户订阅状态的准确性，即使他们没有打开应用。

2.  **购买恢复 (Restore Purchases):**
    *   客户端提供“恢复购买”按钮。
    *   点击后，客户端调用平台SDK获取用户在该平台上的所有有效购买和订阅信息。
    *   将这些信息（或凭证）发送给PandaHabit后端。
    *   后端重新验证这些凭证，并更新用户在PandaHabit数据库中的状态。这对于用户更换设备或重装应用非常重要。

3.  **错误处理与幂等性：**
    *   购买验证、奖励发放等关键操作，后端需要设计成幂等的，即多次执行相同请求（如因网络问题重试）只会产生一次实际效果。可以使用交易ID (`transaction_id`) 作为幂等键。
    *   详细记录错误日志，方便排查问题。

4.  **安全性：**
    *   保护好App Store/Google Play的服务器API密钥。
    *   对客户端发送的凭证进行严格的服务器端验证。
    *   防止客户端篡改请求（如修改任务完成数量）。所有关键逻辑和状态变更都应在服务器端进行。

5.  **用户体验：**
    *   购买流程应尽可能顺畅。
    *   订阅状态和特权信息应清晰展示给用户。
    *   通行证奖励领取应有即时、愉悦的反馈。

**四、涉及的数据库表 (补充/调整)**

*   **`users` 表:**
    *   `user_id` (PK, 来自 `BetterAuth` 的UID)
    *   `email` (来自 `BetterAuth`, 可选)
    *   `created_at`
    *   `last_login_at`
    *   `panda_level` (或其他核心用户进度)
    *   `current_vip_level` (可以根据有效订阅动态计算，或单独存储)
*   **`user_battle_pass_ownership` 表 (新增):**
    *   `user_id` (FK)
    *   `pass_id` (FK, `battle_passes.pass_id`)
    *   `purchase_date`
    *   `platform_transaction_id` (来自App Store/Google Play的交易ID)
    *   `pass_type` ENUM('standard', 'premium') (Standard对应购买基础付费轨道，Premium对应典藏版)
    *   PRIMARY KEY (`user_id`, `pass_id`)
*   **`user_battle_pass_progress` 表 (新增):**
    *   `user_id` (FK)
    *   `pass_id` (FK)
    *   `current_level` (INT, default 1)
    *   `current_exp` (INT, default 0)
    *   `claimed_free_levels` (TEXT/JSON, 存储已领取的免费等级奖励，如 '1,2,5')
    *   `claimed_paid_levels` (TEXT/JSON, 存储已领取的付费等级奖励)
    *   PRIMARY KEY (`user_id`, `pass_id`)
*   **`user_subscriptions` 表 (调整/确认):**
    *   `user_subscription_id` (PK, AI)
    *   `user_id` (FK)
    *   `plan_id` (FK, `subscription_plans.plan_id`)
    *   `platform_original_transaction_id` (用于追踪续订的原始交易ID)
    *   `platform_latest_transaction_id` (最新的续订交易ID)
    *   `purchase_date` (首次购买日期)
    *   `expires_date` (当前订阅周期到期日)
    *   `auto_renew_status` (BOOLEAN, 是否自动续订)
    *   `subscription_status` ENUM('active', 'grace_period', 'on_hold', 'paused', 'expired', 'cancelled') (根据平台通知更新)
    *   `last_updated_from_platform` (DATETIME, 上次从平台同步状态的时间)
*   **`user_inventory` 表:** 存储用户获得的物品，包括通行证和订阅奖励。
*   **`user_transactions` 表:** (可选，但推荐) 记录所有内购交易日志，方便对账和客服。

通过这样的设计，PandaHabit可以将通行证系统与主流的订阅和身份验证服务紧密结合，为用户提供流畅且安全的付费体验，同时确保后端数据的准确性和一致性。核心在于清晰的职责划分：`BetterAuth`负责身份，平台支付SDK和S2S通知负责订阅生命周期，PandaHabit后端负责业务逻辑和状态同步。